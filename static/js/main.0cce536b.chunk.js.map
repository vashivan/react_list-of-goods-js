{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_BY_ALPHABET","SORT_BY_LENGTH","App","useState","sortMethod","setSortMethod","reverse","setReverse","sortedList","goods","prepearedGoods","sort","good1","good2","localeCompare","length","getSortedGoods","className","onClick","type","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"mPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAmB,mBACnBC,EAAiB,iBA2BhB,IAAMC,EAAM,WACjB,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAWMC,EAtCR,SAAwBC,EAAxB,GAAyD,IAAxBL,EAAuB,EAAvBA,WAAYE,EAAW,EAAXA,QACrCI,EAAc,YAAOD,GAqB3B,OAnBIL,GACFM,EAAeC,MAAK,SAACC,EAAOC,GAC1B,OAAQT,GACN,KAAKJ,EACH,OAAOY,EAAME,cAAcD,GAE7B,KAAKZ,EACH,OAAOW,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKXT,GACFI,EAAeJ,UAGVI,EAgBYM,CAAejB,EAAiB,CAAEK,aAAYE,YAEjE,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMb,EAAcL,IAC7BmB,KAAK,SACLF,UAAWG,IAAG,iBACZ,CAAE,WAAYhB,IAAeJ,IAJjC,iCASA,wBACEkB,QAAS,kBAAMb,EAAcJ,IAC7BkB,KAAK,SACLF,UAAWG,IAAG,oBACZ,CAAE,WAAYhB,IAAeH,IAJjC,4BASA,wBACEiB,QA5Bc,WACpBX,GAAYD,IA4BNa,KAAK,SACLF,UAAWG,IAAG,oBACZ,CAAE,YAAad,IAJnB,sBASEF,GAAcE,IACd,wBACEY,QA3CI,WACZb,EAAc,IACdE,GAAW,IA0CHY,KAAK,SACLF,UAAU,4BAHZ,sBAUJ,6BACGT,EAAWa,KAAI,SAAAC,GAAI,OAClB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCrGlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0cce536b.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport cn from 'classnames';\nimport { useState } from 'react';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_BY_ALPHABET = 'alphabet-sorting';\nconst SORT_BY_LENGTH = 'length-sorting';\n\nfunction getSortedGoods(goods, { sortMethod, reverse }) {\n  const prepearedGoods = [...goods];\n\n  if (sortMethod) {\n    prepearedGoods.sort((good1, good2) => {\n      switch (sortMethod) {\n        case SORT_BY_ALPHABET:\n          return good1.localeCompare(good2);\n\n        case SORT_BY_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverse) {\n    prepearedGoods.reverse();\n  }\n\n  return prepearedGoods;\n}\n\nexport const App = () => {\n  const [sortMethod, setSortMethod] = useState('');\n  const [reverse, setReverse] = useState(false);\n\n  const reset = () => {\n    setSortMethod('');\n    setReverse(false);\n  };\n\n  const reverseSetter = () => {\n    setReverse(!reverse);\n  };\n\n  const sortedList = getSortedGoods(goodsFromServer, { sortMethod, reverse });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortMethod(SORT_BY_ALPHABET)}\n          type=\"button\"\n          className={cn('button is-info',\n            { 'is-light': sortMethod !== SORT_BY_ALPHABET })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortMethod(SORT_BY_LENGTH)}\n          type=\"button\"\n          className={cn('button is-success',\n            { 'is-light': sortMethod !== SORT_BY_LENGTH })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={reverseSetter}\n          type=\"button\"\n          className={cn('button is-warning',\n            { 'is-light': !reverse })}\n        >\n          Reverse\n        </button>\n\n        {(sortMethod || reverse) && (\n          <button\n            onClick={reset}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {sortedList.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}